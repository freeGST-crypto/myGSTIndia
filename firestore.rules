
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read/write their own user document
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // Deny create and delete for security
      allow create, delete: if false;
    }
    
    // Generic rule for user-owned content (invoices, customers, etc.)
    // This rule applies to any collection where documents contain a 'userId' field.
    match /{collection}/{docId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Explicit rule for journalVouchers to be safe
    match /journalVouchers/{voucherId} {
       allow read, write: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Explicit rule for customers
     match /customers/{customerId} {
       allow read, write: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Explicit rule for vendors
     match /vendors/{vendorId} {
       allow read, write: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Explicit rule for items
     match /items/{itemId} {
       allow read, write: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
  }
}
